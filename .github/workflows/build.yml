name: Build
on:
  push:
    branches: ["main"]
  pull_request:
    types: [ opened, synchronize ]
  workflow_dispatch:

# automatically cancel previous runs on the same PR
# https://stackoverflow.com/questions/66335225/how-to-cancel-previous-runs-in-the-pr-when-you-push-new-commitsupdate-the-curre/67939898#67939898
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        scalaVersion: ["2.13.8"]
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3.1.0
      - uses: coursier/cache-action@v6
      - uses: coursier/setup-action@v1
        with:
          jvm: adoptium:1.17
          apps: sbt metals

      # https://github.com/actions/cache/blob/master/examples.md#node---yarn
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn
        uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}


      - name: Cache Scalablytyped transpilations
        uses: actions/cache@v3
        with:
          path: |
            ~/.ivy2/local/org.scalablytyped
            ~/.cache/scalablytyped
          key: ${{ runner.os }}-scalablytyped-${{ hashfiles('build.sbt') }}-${{ hashFiles('*/yarn.lock') }}


      - name: Compile & Test
        run: |
          # Runner has 7G of RAM, so 5G for sbt is ok here:
          # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources
          ENABLE_FATAL_WARNINGS=true sbt --mem 5000 ++${{matrix.scalaVersion}} compile test scalafmtCheck scalafmtSbtCheck

      - name: Check if working directory is clean
        run: git diff --quiet --exit-code || (git status && false)

      - name: Check if scala version is compatible with latest metals
        run: |
          SCALA_VERSION=$(sed -nr 's/.*scalaVersion\s+:=\s+"(.*)"/\1/p' build.sbt)
          METALS_SUPPORTED_VERSIONS=$(metals --version)
          echo "$METALS_SUPPORTED_VERSIONS"
          metals --version | grep "$SCALA_VERSION" || (echo "Scala $SCALA_VERSION not supported by metals."; false)

      # - name: Debug over SSH (tmate)
      #   # if: ${{ failure() }}
      #   uses: mxschmitt/action-tmate@v3
      #   with:
      #     limit-access-to-actor: true
